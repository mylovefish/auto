<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ognice.dao.ContactMapper">
	<resultMap id="BaseResultMap" type="com.ognice.domain.Contact">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="contact" property="contact" jdbcType="VARCHAR" />
		<result column="tel" property="tel" jdbcType="VARCHAR" />
		<result column="bumen" property="bumen" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="owner" property="owner" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		`id`
		,
		`contact`
		,
		`tel`
		,
		`bumen`
		,
		`email`
		,
		`type`
		,
		`owner`
		
	</sql>
	<select id="selectContactById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from `contact` where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="page" parameterType="com.ognice.controller.common.PageSearchParam" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from `contact` where 1=1
		<if test="params!=null">
		<if test="params.id !=null ">
		AND `id` = #{params.id}
		</if>
		<if test="params.contact !=null and params.contact!=''">
		 AND `contact` like concat('%',#{params.contact},'%')
		</if>
		<if test="params.tel !=null and params.tel!=''">
		 AND `tel` like concat('%',#{params.tel},'%')
		</if>
		<if test="params.bumen !=null and params.bumen!=''">
		 AND `bumen` like concat('%',#{params.bumen},'%')
		</if>
		<if test="params.email !=null and params.email!=''">
		 AND `email` like concat('%',#{params.email},'%')
		</if>
		<if test="params.type !=null ">
		AND `type` = #{params.type}
		</if>
		<if test="params.owner !=null ">
		AND `owner` = #{params.owner}
		</if>
		</if>
		order by id desc
		<if test="page!=null"> limit #{page},#{pagesize}
		</if>
	</select>

	<delete id="delete" parameterType="java.lang.Integer"> delete from `contact` where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.ognice.domain.Contact"> insert into `contact` (
		`id`
				,
		`contact`
				,
		`tel`
				,
		`bumen`
				,
		`email`
				,
		`type`
				,
		`owner`
				
	) values (
		#{id,jdbcType=INTEGER}
				,
		#{contact,jdbcType=VARCHAR}
				,
		#{tel,jdbcType=VARCHAR}
				,
		#{bumen,jdbcType=VARCHAR}
				,
		#{email,jdbcType=VARCHAR}
				,
		#{type,jdbcType=INTEGER}
				,
		#{owner,jdbcType=INTEGER}
				
	)
	</insert>

	<update id="update" parameterType="com.ognice.domain.Contact">
		update `contact`
		<set>
		<if test="id != null and id!=''">
		`id`= #{id,jdbcType=INTEGER},
		</if>
		<if test="contact != null and contact!=''">
		`contact`= #{contact,jdbcType=VARCHAR},
		</if>
		<if test="tel != null and tel!=''">
		`tel`= #{tel,jdbcType=VARCHAR},
		</if>
		<if test="bumen != null and bumen!=''">
		`bumen`= #{bumen,jdbcType=VARCHAR},
		</if>
		<if test="email != null and email!=''">
		`email`= #{email,jdbcType=VARCHAR},
		</if>
		<if test="type != null and type!=''">
		`type`= #{type,jdbcType=INTEGER},
		</if>
		<if test="owner != null and owner!=''">
		`owner`= #{owner,jdbcType=INTEGER},
		</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>